// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$String = require("bs-platform/lib/js/string.js");
var SimpleTest = require("./simpleTest.bs.js");

var cssClassName = "Comment Comment-hidden";

var discount = 20 * 0.05 + 25.0 | 0;

SimpleTest.assertEqual(26, discount, "[exercise 1] Calculate discount for total amount of shopping cart");

function calculateDiscount(total) {
  return (
          total >= 500 ? total * 0.1 : (
              total >= 200 ? (total - 200 | 0) * 0.05 + 25.0 : 0.0
            )
        ) | 0;
}

SimpleTest.assertEqual(0, calculateDiscount(199), "[exercise 2] Calculate discount for 199");

SimpleTest.assertEqual(25, calculateDiscount(200), "[exercise 2] Calculate discount for 200");

SimpleTest.assertEqual(39, calculateDiscount(499), "[exercise 2] Calculate discount for 499");

SimpleTest.assertEqual(50, calculateDiscount(500), "[exercise 2] Calculate discount for 500");

function wrapTagAroundText(tag, text) {
  return "<" + tag + ">" + text + "</" + tag + ">";
}

function makeHeading1(text) {
  return wrapTagAroundText("h1", text);
}

function makeHeading2(text) {
  return wrapTagAroundText("h2", text);
}

function makeHeading3(param) {
  return wrapTagAroundText("h3", param);
}

function makeParagraph(param) {
  return wrapTagAroundText("p", param);
}

var mainHeading = wrapTagAroundText("h1", "This is the title of the document");

var subHeading = wrapTagAroundText("h2", "A simple tagline...");

var para1 = wrapTagAroundText("p", "Text content....");

var para2 = wrapTagAroundText("p", "This is the second paragraph...");

function wrapTagAroundText2(tagName, indent, text) {
  var indentSpaces = Curry._1(indent, " ");
  return "<" + tagName + ">\n" + indentSpaces + text + "\n</" + tagName + ">";
}

function indent(x) {
  return x.repeat(2);
}

function makeDiv1(text) {
  return wrapTagAroundText2("div", indent, text);
}

function makeDiv2(text) {
  return wrapTagAroundText2("div", (function (x) {
                return x.repeat(2);
              }), text);
}

function makeDiv3(text) {
  return wrapTagAroundText2("div", (function (param) {
                return param.repeat(2);
              }), text);
}

makeDiv3(wrapTagAroundText("p", "Hello, world!"));

function betterWrapTagAroundText(tag, indent, text) {
  var indentSpaces = Curry._1(indent, " ");
  return "<" + tag + ">\n" + indentSpaces + text + "\n</" + tag + ">";
}

betterWrapTagAroundText("div", (function (param) {
        return param.repeat(2);
      }), wrapTagAroundText("p", "Hello, world!"));

function myCharRepeat(count, $$char) {
  var s = $$String.make(1, $$char);
  var _acc = s;
  var _times = count;
  while(true) {
    var times = _times;
    var acc = _acc;
    if (times < 2) {
      return acc;
    }
    _times = times - 1 | 0;
    _acc = acc + s;
    continue ;
  };
}

myCharRepeat(6, /* "@" */64);

var downvotes = 10;

var upvotes = 5;

var cartTotal = 220;

exports.downvotes = downvotes;
exports.upvotes = upvotes;
exports.cssClassName = cssClassName;
exports.cartTotal = cartTotal;
exports.discount = discount;
exports.calculateDiscount = calculateDiscount;
exports.wrapTagAroundText = wrapTagAroundText;
exports.makeHeading1 = makeHeading1;
exports.makeHeading2 = makeHeading2;
exports.makeHeading3 = makeHeading3;
exports.makeParagraph = makeParagraph;
exports.mainHeading = mainHeading;
exports.subHeading = subHeading;
exports.para1 = para1;
exports.para2 = para2;
exports.wrapTagAroundText2 = wrapTagAroundText2;
exports.indent = indent;
exports.makeDiv1 = makeDiv1;
exports.makeDiv2 = makeDiv2;
exports.makeDiv3 = makeDiv3;
exports.betterWrapTagAroundText = betterWrapTagAroundText;
exports.myCharRepeat = myCharRepeat;
/*  Not a pure module */
